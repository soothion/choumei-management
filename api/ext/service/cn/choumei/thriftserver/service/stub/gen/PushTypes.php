<?php
namespace cn\choumei\thriftserver\service\stub\gen;

/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


/**
 * push信息体
 */
class Push extends TBase {
  static $_TSPEC;

  /**
   * @var string
   */
  public $title = "";
  /**
   * @var string
   */
  public $desc = "";
  /**
   * @var string
   */
  public $payload = "";
  /**
   * @var int
   */
  public $passThrough = 0;
  /**
   * @var string
   */
  public $notifyForeground = "";
  /**
   * @var int
   */
  public $notifyId = 1;
  /**
   * @var string
   */
  public $targetType = "";
  /**
   * @var string
   */
  public $app = "";
  /**
   * @var string
   */
  public $appType = "";
  /**
   * @var string
   */
  public $soundUrl = "";
  /**
   * @var int
   */
  public $badge = 1;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'title',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'desc',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'payload',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'passThrough',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'notifyForeground',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'notifyId',
          'type' => TType::I16,
          ),
        7 => array(
          'var' => 'targetType',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'app',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'appType',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'soundUrl',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'badge',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'Push';
  }

  public function read($input)
  {
    return $this->_read('Push', self::$_TSPEC, $input);
  }

  public function write($output) {
    return $this->_write('Push', self::$_TSPEC, $output);
  }

}

/**
 * push调用返回参数
 */
class PushResult extends TBase {
  static $_TSPEC;

  /**
   * @var string
   */
  public $result = null;
  /**
   * @var int
   */
  public $errorCode = null;
  /**
   * @var string
   */
  public $errorMsg = null;
  /**
   * @var string
   */
  public $messageId = null;
  /**
   * @var array
   */
  public $data = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'result',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'errorCode',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'errorMsg',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'messageId',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'data',
          'type' => TType::MAP,
          'ktype' => TType::STRING,
          'vtype' => TType::STRING,
          'key' => array(
            'type' => TType::STRING,
          ),
          'val' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'PushResult';
  }

  public function read($input)
  {
    return $this->_read('PushResult', self::$_TSPEC, $input);
  }

  public function write($output) {
    return $this->_write('PushResult', self::$_TSPEC, $output);
  }

}


